//=== MCS6502SubtargetInfo.h - MCS6502 subtarget information -----*- C++ -*-==//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file contains the MCS6502 implementation of the TargetRegisterInfo
// class.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_MCS6502_MCS6502SUBTARGET_H
#define LLVM_LIB_TARGET_MCS6502_MCS6502SUBTARGET_H

#include "MCS6502FrameLowering.h"
#include "MCS6502ISelLowering.h"
#include "MCS6502InstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "MCS6502GenSubtargetInfo.inc"

namespace llvm {

class StringRef;

class MCS6502Subtarget : public MCS6502GenSubtargetInfo {
  virtual void anchor();
  MCS6502FrameLowering FrameLowering;
  MCS6502InstrInfo InstrInfo;
  MCS6502RegisterInfo RegInfo;
  MCS6502TargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;

  /// Initializes using the passed-in CPU and feature strings so that we can use
  /// initializer lists for subtarget initialization.
  MCS6502Subtarget &initializeSubtargetDependencies(StringRef CPU,
                                                    StringRef FS);

public:
  /// Initializes the data members to match that of the specified triple.
  MCS6502Subtarget(const Triple &TT, const std::string &CPU,
                   const std::string &FS, const TargetMachine &TM);

  /// Parses features string setting specified subtarget options. The definition
  /// of this function is auto-generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const MCS6502FrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const MCS6502InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const MCS6502RegisterInfo *getRegisterInfo() const override {
    return &RegInfo;
  }
  const MCS6502TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
};

} // namespace llvm

#endif // LLVM_LIB_TARGET_MCS6502_MCS6502SUBTARGET_H
